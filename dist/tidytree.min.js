!function(root,factory){"function"==typeof define&&define.amd?define(["patristic"],function(){return root.TidyTree=factory(patristic)}):"object"==typeof module&&module.exports?module.exports=factory(require("patristic")):root.TidyTree=factory(root.patristic)}("undefined"!=typeof self?self:this,function(patristic){"use strict";function TidyTree(data,options,events){options||(options={}),Object.assign(this,{layout:"vertical",type:"tree",mode:"smooth",leafNodes:!0,leafLabels:!1,leafLabelSize:6,branchNodes:!1,branchLabels:!1,branchDistances:!1,ruler:!0,animation:500,margin:[50,50,50,50]},options,{events:{}});let defaultEvents={contextmenu:d=>d3.event.preventDefault(),draw:d=>null,hidetooltip:d=>null,setdata:d=>null,showtooltip:d=>null};events||(events={}),Object.assign(this.events,defaultEvents,events),this.parent&&this.draw(),data instanceof patristic.Branch?this.setData(data):this.setTree(data),this.parent&&this.recenter()}TidyTree.prototype.setData=function(data){if(!data)throw Error("Invalid Data");return this.data=data,this.range=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],this.hierarchy=d3.hierarchy(this.data,d=>d.children).eachBefore(d=>{d.value=(d.parent?d.parent.value:0)+(d.data.length?d.data.length:0),d.value<this.range[0]&&(this.range[0]=d.value),d.value>this.range[1]&&(this.range[1]=d.value)}).each(d=>d.value/=this.range[1]),this.parent?this.redraw():this},TidyTree.prototype.setTree=function(newick){if(!newick)throw Error("Invalid Newick String");return this.setData(patristic.parseNewick(newick))},TidyTree.validLayouts=["horizontal","vertical","circular"],TidyTree.validTypes=["tree","weighted","dendrogram"],TidyTree.validModes=["smooth","square","straight"],TidyTree.prototype.draw=function(selector){if(!selector&&!this.parent)throw Error("No valid target for drawing given! Where should the tree go?");selector&&(this.parent=selector);d3.tree();let svg=d3.select(this.parent).html(null).append("svg").attr("width","100%").attr("height","100%"),g=svg.append("g");return this.zoom=d3.zoom().on("zoom",()=>g.attr("transform",d3.event.transform)),svg.call(this.zoom),g.append("g").attr("class","tidytree-links"),g.append("g").attr("class","tidytree-nodes"),g.append("g").attr("class","tidytree-ruler"),this.events.draw&&this.events.draw(),this};const getX=d=>d.x,getY=d=>d.y,getLength=d=>d.weight;let linkTransformers={tree:{smooth:{horizontal:d3.linkHorizontal().x(getY).y(getX),vertical:d3.linkVertical().x(getX).y(getY),circular:d3.linkRadial().angle(getX).radius(getY)},straight:{horizontal:d=>`M${d.source.y} ${d.source.x} L ${d.target.y} ${d.target.x}`,vertical:d=>`M${d.source.x} ${d.source.y} L ${d.target.x} ${d.target.y}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.y,endAngle=d.target.x-Math.PI/2,endRadius=d.target.y;return"M"+startRadius*Math.cos(startAngle)+","+startRadius*Math.sin(startAngle)+"L"+endRadius*Math.cos(endAngle)+","+endRadius*Math.sin(endAngle)}},square:{horizontal:d=>`M${d.source.y} ${d.source.x} V ${d.target.x} H ${d.target.y}`,vertical:d=>`M${d.source.x} ${d.source.y} H ${d.target.x} V ${d.target.y}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.y,endAngle=d.target.x-Math.PI/2,endRadius=d.target.y,x0=Math.cos(startAngle),y0=Math.sin(startAngle),x1=Math.cos(endAngle),y1=Math.sin(endAngle);return"M"+startRadius*x0+","+startRadius*y0+(endAngle===startAngle?"":"A"+startRadius+","+startRadius+" 0 0 "+(endAngle>startAngle?1:0)+" "+startRadius*x1+","+startRadius*y1)+"L"+endRadius*x1+","+endRadius*y1}}},weighted:{smooth:{horizontal:d3.linkHorizontal().x(getLength).y(getX),vertical:d3.linkVertical().x(getX).y(getLength),circular:d3.linkRadial().angle(getX).radius(getLength)},straight:{horizontal:d=>`M${d.source.weight} ${d.source.x} L ${d.target.weight} ${d.target.x}`,vertical:d=>`M${d.source.x} ${d.source.weight} L ${d.target.x} ${d.target.weight}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.weight,endAngle=d.target.x-Math.PI/2,endRadius=d.target.weight;return"M"+startRadius*Math.cos(startAngle)+","+startRadius*Math.sin(startAngle)+"L"+endRadius*Math.cos(endAngle)+","+endRadius*Math.sin(endAngle)}},square:{horizontal:d=>`M${d.source.weight} ${d.source.x} V ${d.target.x} H ${d.target.weight}`,vertical:d=>`M${d.source.x} ${d.source.weight} H ${d.target.x} V ${d.target.weight}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.weight,endAngle=d.target.x-Math.PI/2,endRadius=d.target.weight,x0=Math.cos(startAngle),y0=Math.sin(startAngle),x1=Math.cos(endAngle),y1=Math.sin(endAngle);return"M"+startRadius*x0+","+startRadius*y0+(endAngle===startAngle?"":"A"+startRadius+","+startRadius+" 0 0 "+(endAngle>startAngle?1:0)+" "+startRadius*x1+","+startRadius*y1)+"L"+endRadius*x1+","+endRadius*y1}}}};function circularPoint(x,y){return[(y=+y)*Math.cos(x-=Math.PI/2),y*Math.sin(x)]}linkTransformers.dendrogram=linkTransformers.tree;let nodeTransformers={tree:{horizontal:d=>`translate(${d.y}, ${d.x})`,vertical:d=>`translate(${d.x}, ${d.y})`,circular:d=>`translate(${circularPoint(d.x,d.y)})`},weighted:{horizontal:d=>`translate(${d.weight}, ${d.x})`,vertical:d=>`translate(${d.x}, ${d.weight})`,circular:d=>`translate(${circularPoint(d.x,d.weight)})`}};nodeTransformers.dendrogram=nodeTransformers.tree;const radToDeg=180/Math.PI;let labelTransformers={tree:{straight:{horizontal:l=>`translate(${(l.source.y+l.target.y)/2}, ${(l.source.x+l.target.x)/2}) rotate(${Math.atan((l.target.x-l.source.x)/(l.target.y-l.source.y))*radToDeg})`,vertical:l=>`translate(${(l.source.x+l.target.x)/2}, ${(l.source.y+l.target.y)/2}) rotate(${Math.atan((l.source.y-l.target.y)/(l.source.x-l.target.x))*radToDeg})`,circular:l=>{let s=circularPoint(l.source.x,l.source.y),t=circularPoint(l.target.x,l.target.y);return`translate(${(s[0]+t[0])/2}, ${(s[1]+t[1])/2}) rotate(${Math.atan((s[1]-t[1])/(s[0]-t[0]))*radToDeg})`}},square:{horizontal:l=>`translate(${(l.source.y+l.target.y)/2}, ${l.target.x})`,vertical:l=>`translate(${l.target.x}, ${(l.source.y+l.target.y)/2}) rotate(90)`,circular:l=>{let u=circularPoint(l.target.x,(l.source.y+l.target.y)/2);return`translate(${u[0]}, ${u[1]}) rotate(${l.target.x*radToDeg%180-90})`}}},weighted:{straight:{horizontal:l=>`translate(${(l.source.weight+l.target.weight)/2}, ${(l.source.x+l.target.x)/2}) rotate(${Math.atan((l.target.x-l.source.x)/(l.target.weight-l.source.weight))*radToDeg})`,vertical:l=>`translate(${(l.source.x+l.target.x)/2}, ${(l.source.weight+l.target.weight)/2}) rotate(${Math.atan((l.source.weight-l.target.weight)/(l.source.x-l.target.x))*radToDeg})`,circular:l=>{let s=circularPoint(l.source.x,l.source.weight),t=circularPoint(l.target.x,l.target.weight);return`translate(${(s[0]+t[0])/2}, ${(s[1]+t[1])/2}) rotate(${Math.atan((s[1]-t[1])/(s[0]-t[0]))*radToDeg})`}},square:{horizontal:l=>`translate(${(l.source.weight+l.target.weight)/2}, ${l.target.x})`,vertical:l=>`translate(${l.target.x}, ${(l.source.weight+l.target.weight)/2}) rotate(90)`,circular:l=>{let u=circularPoint(l.target.x,(l.source.weight+l.target.weight)/2);return`translate(${u[0]}, ${u[1]}) rotate(${l.target.x*radToDeg%180-90})`}}}};return labelTransformers.tree.smooth=labelTransformers.tree.straight,labelTransformers.weighted.smooth=labelTransformers.weighted.straight,labelTransformers.dendrogram=labelTransformers.tree,TidyTree.prototype.redraw=function(){let parent=d3.select(this.parent),width=parseFloat(parent.style("width"))-this.margin[0]-this.margin[2],height=parseFloat(parent.style("height"))-this.margin[1]-this.margin[3],scalar="horizontal"===this.layout?width:"vertical"===this.layout?height:Math.min(width,height)/2;this.hierarchy.each(d=>d.weight=scalar*d.value);let g=parent.select("svg g"),source=("tree"===this.type?d3.tree():d3.cluster()).size("circular"===this.layout?[2*Math.PI,Math.min(height,width)/2]:"horizontal"===this.layout?[height,width]:[width,height]).separation((a,b)=>1),links=g.select("g.tidytree-links").selectAll("g.tidytree-link").data(source(this.hierarchy).links());links.join(enter=>{let newLinks=enter.append("g").attr("class","tidytree-link");newLinks.append("path").attr("fill","none").attr("stroke","#ccc").attr("d",linkTransformers[this.type][this.mode][this.layout]).transition().duration(this.animation).attr("opacity",1),newLinks.append("text").attr("y",2).attr("text-anchor","middle").style("font-size","6px").text(d=>void 0===d.target.data.length?"0.000":d.target.data.length.toLocaleString()).transition().duration(this.animation).style("opacity",this.branchDistances?1:0)},update=>{update.select("path").transition().duration(this.animation).attr("d",linkTransformers[this.type][this.mode][this.layout])},exit=>exit.transition().duration(this.animation).attr("opacity",0).remove()),this.branchDistances&&links.selectAll("text").transition().duration(this.animation).attr("transform",labelTransformers[this.type][this.mode][this.layout]);let nodes=g.select("g.tidytree-nodes").selectAll("g.tidytree-node").data(this.hierarchy.descendants(),d=>d.id);nodes.join(enter=>{let newNodes=enter.append("g").attr("class",d=>"tidytree-node "+(d.children?"tidytree-node-internal":"tidytree-node-leaf")).attr("transform",nodeTransformers[this.type][this.layout]);newNodes.append("circle").attr("title",d=>d.data.id).style("opacity",d=>d.children&&this.branchNodes||!d.children&&this.leafNodes?1:0).on("mouseenter focusin",d=>this.trigger("showtooltip",d)).on("mouseout focusout",d=>this.trigger("hidetooltip",d)).on("contextmenu",d=>this.trigger("contextmenu",d)).attr("r",2.5),newNodes.append("text").text(d=>d.data.id).style("font-size","6px").attr("y",2).attr("x",5).style("opacity",d=>d.children&&this.branchLabels||!d.children&&this.leafLabels?1:0)},update=>{update.transition().duration(this.animation).attr("transform",nodeTransformers[this.type][this.layout])},exit=>exit.transition().duration(this.animation).attr("opacity",0).remove()),"vertical"===this.layout?nodes.selectAll("text").attr("transform","rotate(90)").attr("text-anchor","start").attr("x",5):"horizontal"===this.layout?nodes.selectAll("text").attr("transform","rotate(0)").attr("text-anchor","start").attr("x",5):nodes.selectAll("text").attr("transform",l=>"rotate("+(l.x/Math.PI*180%180-90)+")").attr("text-anchor",l=>l.x%(2*Math.PI)>Math.PI?"end":"start").attr("x",l=>l.x%(2*Math.PI)>Math.PI?-5:5);let ruler=g.select("g.tidytree-ruler");if(this.ruler){ruler.attr("transform","horizontal"==this.layout?`translate(0,${height})`:"translate(0,0)");let axis="horizontal"==this.layout?d3.axisBottom():d3.axisRight();"tree"===this.type?ruler.transition().duration(this.animation).attr("opacity",1).call(axis.scale(d3.scaleLinear([this.hierarchy.depth,this.hierarchy.height],[0,scalar]))):"weighted"===this.type?ruler.transition().duration(this.animation).attr("opacity",1).call(axis.scale(d3.scaleLinear(this.range,[0,scalar]))):ruler.transition().duration(this.animation).attr("opacity",0)}else ruler.transition().duration(this.animation).attr("opacity",0);return this},TidyTree.prototype.recenter=function(){let svg=d3.select(this.parent).select("svg"),x=this.margin[0],y=this.margin[3];return"circular"===this.layout&&(x+=parseFloat(svg.style("width"))/2,y+=parseFloat(svg.style("height"))/2),svg.transition().duration(this.animation).call(this.zoom.transform,d3.zoomIdentity.translate(x,y)),this},TidyTree.prototype.setLayout=function(newLayout){if(!TidyTree.validLayouts.includes(newLayout))throw Error("Cannot set TidyTree to layout:",newLayout,"\nValid layouts are:",TidyTree.validLayouts);return this.layout=newLayout,this.parent?this.redraw():this},TidyTree.prototype.setMode=function(newMode){if(!TidyTree.validModes.includes(newMode))throw Error("Cannot set TidyTree to mode:",newMode,"\nValid modes are:",TidyTree.validModes);return this.mode=newMode,this.parent?this.redraw():this},TidyTree.prototype.setType=function(newType){if(!TidyTree.validTypes.includes(newType))throw Error("Cannot set TidyTree to type:",newType,"\nValid types are:",TidyTree.validTypes);return this.type=newType,this.parent?this.redraw():this},TidyTree.prototype.setAnimation=function(speed){return this.animation=speed,this},TidyTree.prototype.setLeafNodes=function(show){return this.leafNodes=!!show,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-leaf circle").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.setLeafLabels=function(show){return this.leafLabels=!!show,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-leaf text").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.setLeafLabelSize=function(size){return this.leafLabelSize=size,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-leaf text").transition().duration(this.animation).attr("horizontal"===this.layout?"y":"x",size/2.5).style("font-size",size+"px"),this},TidyTree.prototype.setBranchNodes=function(show){return this.branchNodes=!!show,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-internal circle").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.setBranchLabels=function(show){return this.branchLabels=!!show,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-internal text").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.setBranchLabelSize=function(size){return this.branchLabelSize=size,this.parent&&d3.select(this.parent).select("svg").selectAll("g.tidytree-node-internal text").transition().duration(this.animation).attr("horizontal"===this.layout?"y":"x",size/2.5).style("font-size",size+"px"),this},TidyTree.prototype.setBranchDistances=function(show){if(this.branchDistances=!!show,this.parent){let links=d3.select(this.parent).select("svg g.tidytree-links").selectAll("g.tidytree-link").selectAll("text");show&&links.attr("transform",labelTransformers[this.type][this.mode][this.layout]),links.transition().duration(this.animation).style("opacity",show?1:0)}return this},TidyTree.prototype.setBranchDistanceSize=function(size){return this.branchDistanceSize=size,this.parent&&d3.select(this.parent).select("svg g.tidytree-links").selectAll("g.tidytree-link").selectAll("text").transition().duration(this.animation).style("font-size",size+"px"),this},TidyTree.prototype.setRuler=function(show){return this.ruler=!!show,this.parent&&this.redraw(),this},TidyTree.prototype.on=function(events,callback){return events.split(" ").forEach(event=>this.events[event]=callback),this},TidyTree.prototype.off=function(events){let nullFn=()=>null;return events.split(" ").forEach(event=>this.events[event]=nullFn),this},TidyTree.prototype.trigger=function(event,...args){if(!this.events[event])throw Error(`No event named ${event} is defined.`);return this.events[event](args)},TidyTree.prototype.destroy=function(){this.parent&&d3.select(this.parent).html(null)},TidyTree});
